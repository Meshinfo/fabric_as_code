---

# HLF Services for Topology 0 with
  # 1. 1x Root CA [replicas = 1]
  # 2. 2x ntermediate CAs
    # 2.1. 1x Agent: registers agents such and peers, orderers and others [replicas = 1]
    # 2.2. 1x User: registers users of Blockchain application [replicas =2]
  # 3. 1x PostGres SQL databases for the intermediate cas
  # 4. 1x Orderer with RAFT [replicas = 2]
  # 5. 2x Peers
    # 5.1. 1x Commiter, Endorser peer
    # 5.2  1x Anchor peer
  # 6. 2x CouchDB for the peer nodes. Note: Each CouchDB for relevent peers needs to be present in the same machine

  # We create relevent folder structure in S3FS mount locally for service {{ rca.name }}
- name: Create Fabric CA Server folders in hlft-store, if it dont exists
  become: yes
  file: 
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0750
  loop:
        - {path: "/home/{{ hlf_username }}/hlft-store/{{hlf_topology}}", owner: "{{ hlf_username}}", group: "{{ hlf_group}}"}
        - {path: "/home/{{ hlf_username }}/hlft-store/{{hlf_topology}}/{{rca.name}}", owner: "{{rca.name}}", group: "{{ hlf_group}}"}
        - {path: "/home/{{ hlf_username }}/hlft-store/{{hlf_topology}}/{{aica.name}}", owner: "{{aica.name}}", group: "{{ hlf_group}}"}

 # Copy relevent config files to s3fs directories for the docker services
- name: Config templating
  become: yes
  vars:
    ca_config: "{{item}}"
  template:
    src: fabric-ca-server-config.yaml.j2
    dest: "/home/{{ hlf_username }}/hlft-store/{{hlf_topology}}/{{item.name}}/fabric-ca-server-config.yaml"
    owner: "{{ item.name }}"
    group: "{{ item.group }}"
    mode: 0600
  loop: "{{cas}}"

  # Create & Start service {{ item.name }} 
- name: Fabric CA - {{ item.name }}
  become: yes
  become_user: "{{ hlf_username}}"
  vars:
    ca_home: "FABRIC_CA_HOME=/home/{{item.name}}/fabric-ca"
  docker_swarm_service:
    user: "{{ item.name }}"     
    name: "{{ item.name }}"
    hostname: "{{ item.name }}"
    networks:
      - "{{swarm_network}}"
    image: "{{item.name}}:{{item.tag}}"
    command: "bash -c"
    mounts:
      - source: "/home/{{ hlf_username}}/hlft-store/{{hlf_topology}}/{{item.name}}"
        target: "/home/{{item.name}}/fabric-ca"
        type: bind
    env: "{{ca_home}}"
    args:
      - "{{item.commands}}"
  loop: "{{cas}}"

