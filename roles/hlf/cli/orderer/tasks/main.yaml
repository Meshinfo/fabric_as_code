# ---

# HLF CA CLI Services
  
# Stop all CLI Services services
- name: Stop CLI Service - {{ item.name }}_cli
  become: yes
  docker_swarm_service:   
    name: "{{ item.name }}_cli"
    state: absent
    networks:
      - "{{swarm_network}}"
  loop: 
    - "{{ orderer }}"  

# We create relevent folder structure in the mount locally for the service 
- name: Clean OrdererCLI folders in hlft-store, if they exists
  become: yes  
  file: 
    path: "/root/hlft-store/{{item.name}}_cli"
    state: absent
  loop:        
    - "{{ orderer }}"

- name: Create Orderer CLI Server folders in hlft-store
  become: yes
  file: 
    path: "/root/hlft-store/{{item.name}}_cli"
    state: directory
    mode: 0750
  loop:
    - "{{ orderer }}" 

- name: Create ORG MSP structure folder in hlft-store
  become: yes
  file: 
    path: "/root/hlft-store/{{orderer.name}}_cli/{{item}}"
    state: directory
    mode: 0750
  loop:
    - "orgMSP"
    - "orgMSP/admincerts"
    - "orgMSP/cacerts"
    - "orgMSP/tlscacerts"
    - "orgMSP/users"

- name: Populate the orgMSP
  become: yes
  copy: 
    src: "/root/hlft-store/{{item[0]}}"
    dest: "/root/hlft-store/{{orderer.name}}_cli/orgMSP/{{item[1]}}"
    remote_src: yes
  loop:
    - ["{{orgca.name}}/admin/msp/signcerts/cert.pem", "admincerts"]
    - ["{{orgca.name}}/ca-cert.pem", "cacerts"]
    - ["{{tlsca.name}}/ca-cert.pem", "tlscacerts"]

# - ["/root/hlft-store/{{orgca.name}}/admin/msp/signcerts/cert.pem" ]
# Copy the relevent scripts
- name: Copy scripts
  become: yes
  copy:
    src: "cli.sh"
    dest: "/root/hlft-store/{{item.name}}_cli/cli.sh"
    mode: "0500"
    force: yes 
  loop:
    - "{{ orderer }}"

 # Copy relevent config files to mount directories for the docker services
- name: Config templating configtx.yaml
  become: yes
  vars:
    configtx: "{{orderer}}"
  template:
    src: "configtx.yaml.j2"
    dest: "/root/hlft-store/{{orderer.name}}_cli/configtx.yaml"
    mode: 0660
    force: yes

  # Create & Start service for CLI 
- name: Fabric Service - {{ item.name }}
  become: yes
  docker_swarm_service:
    name: "{{ item.name }}_cli"
    hostname: "{{ item.name }}_cli"
    networks:
      - "{{swarm_network}}"
    image: "{{cli.image}}:{{cli.tag}}"
    mode: replicated
    replicas: "-1"
    command: >
      bash -c "{{item.path}}_cli/cli.sh;"
    mounts:
      - source: "/root/hlft-store/{{item.name}}_cli/"
        target: "{{item.path}}_cli"
        type: bind 
      - source: "/root/hlft-store/{{orgca.name}}/{{item.name}}/"
        target: "{{item.path}}"
        type: bind   
    env: 
      - "HOST_HOME={{item.path}}"
      - "ORG={{org.name}}"
    working_dir: "{{item.path}}_cli"     
    placement:      
      constraints:
        - node.role == worker     
    force_update: yes 
  loop: 
     - "{{ orderer }}"
  when: item.switch == "on"

# Pause for 5 seconds for genesis block to be created.
- pause:
    seconds: 5
