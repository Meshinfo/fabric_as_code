# ---

# HLF CLI Service
  
  # Stop all Services services
- name: Stop CLI Service - {{ item.name }}
  become: yes
  become_user: "{{ hlf_username}}"
  docker_swarm_service:   
    name: "{{ item.name }}"
    state: absent
    networks:
      - "{{swarm_network}}"
  loop: 
    - "{{ cli }}"       

  # We create relevent folder structure in S3FS mount locally for service 
- name: Clean CLI folders in hlft-store, if they exists
  become: yes  
  file: 
    path: "{{item.path}}"
    state: absent
  loop:        
    - "{{ cli }}"     

- name: Create CLI Service folders in hlft-store
  become: yes
  file: 
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.group }}"
    mode: 0750
  loop:
    - "{{ cli }}"   

  # Copy the relevent scripts
- name: Copy scripts
  become: yes
  copy:
    src: "cli.sh"
    dest: "/home/{{ hlf_username}}/hlft-store/{{item.name}}/cli.sh"
    owner: "{{item.name}}"
    group: "{{item.group}}"
    mode: "0500"
    force: yes
  loop: 
    - "{{ cli }}" 

  # Create & Start service for CLI 
- name: Fabric Service - {{ item.name }}
  become: yes
  become_user: "{{ hlf_username}}"  
  docker_swarm_service:
    user: "{{ item.name }}"     
    name: "{{ item.name }}"
    hostname: "{{ item.name }}"
    networks:
      - "{{swarm_network}}"
    image: "{{item.name}}:{{item.tag}}"
    mode: replicated
    replicas: "{{item.replicas}}"
    command: >
      bash -c "/home/{{item.name}}/cli.sh;"
    mounts:
      - source: "/home/{{ hlf_username}}/hlft-store/{{item.name}}"
        target: "/home/{{item.name}}"
        type: bind
      - source: "/home/{{ hlf_username}}/hlft-store/{{orderer.name}}"
        target: "/home/{{orderer.name}}"
        type: bind
      - source: "/home/{{ hlf_username}}/hlft-store/{{epeer.name}}"
        target: "/home/{{epeer.name}}"
        type: bind
      - source: "/home/{{ hlf_username}}/hlft-store/{{cpeer.name}}"
        target: "/home/{{cpeer.name}}"
        type: bind
      - source: "/home/{{ hlf_username}}/hlft-store/{{apeer.name}}"
        target: "/home/{{apeer.name}}"
        type: bind      
    env: 
      - "FABRIC_CFG_PATH=/home/{{item.name}}"
      - "ORDERER_HOST={{orderer.name}}"  
      - "EPEER_HOST={{epeer.name}}"
      - "CPEER_HOST={{cpeer.name}}"
      - "APEER_HOST={{apeer.name}}"
    placement:      
      constraints:
        - node.role == worker      
    force_update: yes
  loop: 
     - "{{ cli }}"    