# ---

# HLF CA CLI Services
  
# Stop all CLI Services services
- name: Stop CLI Service - {{ item.name }}_cli
  become: yes
  docker_swarm_service:   
    name: "{{ item.name }}_cli"
    state: absent
    networks:
      - "{{swarm_network}}"
  loop: 
    - "{{ tlsca }}"
    - "{{ orgca }}"       

# Copy the relevent scripts
- name: Copy scripts
  become: yes
  copy:
    src: "cli.sh"
    dest: "/root/hlft-store/{{item.name}}/cli.sh"
    mode: "0500"
    force: yes
  loop: 
    - "{{ tlsca }}" 
    - "{{ orgca }}" 

  # Create & Start service for CLI 
- name: Fabric Service - {{ item.name }}
  become: yes
  docker_swarm_service:
    name: "{{ item.name }}_cli"
    hostname: "{{ item.name }}_cli"
    networks:
      - "{{swarm_network}}"
    image: "{{item.image}}:{{item.tag}}"
    mode: replicated
    replicas: "-1"
    command: >
      bash -c "/{{item.path}}/cli.sh {{item.name}};"
    mounts:
      - source: "/root/hlft-store/{{item.name}}/"
        target: "{{item.path}}"
        type: bind     
    env: 
      - "HOST_HOME={{item.path}}"
      - "FABRIC_CA_NAME={{item.name}}"
      - "FABRIC_CA_SECRET={{item.password}}"
      - "FABRIC_CA_PORT=7054"
      - "CORE_PEER_LOCALMSPID={{org.name}}MSP"
      - "ORDERER_HOST={{orderer.name}}"
      - "ORDERER_SECRET={{orderer.password}}"
      - "PEER1_HOST={{peer1.name}}"
      - "PEER1_SECRET={{peer1.password}}"
      - "PEER2_HOST={{peer2.name}}"
      - "PEER2_SECRET={{peer2.password}}"      
    placement:      
      constraints:
        - node.role == worker     
    force_update: yes 
  loop: 
     - "{{ tlsca }}"
     - "{{ orgca }}"    
  when: item.switch == "on"