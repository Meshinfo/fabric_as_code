---
- name: "Get docker info"
  shell: docker info
  register: docker_info
  changed_when: false


- name: "Init a new swarm with default parameters"
  docker_swarm:
    state: present
    advertise_addr: "{{ hostvars[groups.swarm_manager_prime[0]]['ansible_eth0']['ipv4']['address'] }}"
  when: "docker_info.stdout.find('Swarm: inactive') != -1 and inventory_hostname in groups.swarm_manager_prime"

- name: Update swarm configuration
  docker_swarm:
    state: present
    election_tick: 15
  when: "docker_info.stdout.find('Swarm: inactive') != -1 and inventory_hostname in groups.swarm_manager_prime"

- name: Inspect swarm
  docker_swarm_info:
    nodes: no
    verbose_output: yes
  register: result
  when: "inventory_hostname in groups.swarm_manager_prime"

- name: "Join as a manager"
  docker_swarm:
    state: join
    join_token: "{{ hostvars[groups.swarm_manager_prime[0]]['result'].swarm_facts.JoinTokens.Manager }}"
    advertise_addr: "eth0:4567"
    remote_addrs: ["{{ hostvars[groups.swarm_manager_prime[0]]['ansible_eth0']['ipv4']['address'] }}:2377" ]
  retries: 3
  delay: 15
  when: "docker_info.stdout.find('Swarm: inactive') != -1  and inventory_hostname in groups.swarm_managers"

- name: "Join as a worker"
  #vars:
    #swarm_managers: "{{ groups.swarm_managers | map('extract', hostvars, ['ansible_eth0', 'ipv4', 'address']) | join(':2377,')}}"
  docker_swarm:
    state: join
    join_token: "{{ hostvars[groups.swarm_manager_prime[0]]['result'].swarm_facts.JoinTokens.Worker }}"
    advertise_addr: "eth0:4567"
    remote_addrs: "{{ hostvars[groups.swarm_manager_prime[0]]['ansible_eth0']['ipv4']['address'] }}"
  retries: 3
  delay: 20
  when: "docker_info.stdout.find('Swarm: inactive') != -1 and inventory_hostname in groups.swarm_workers"

- name: "Create an Overlay Docker Network"
  docker_network:    
    name: "hlfnet"
    driver: "overlay"
    attachable: yes
  when: "inventory_hostname in groups.swarm_manager_prime"





